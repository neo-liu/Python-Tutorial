import numpy as np
import matplotlib.pyplot as plt
from IPython import display
from matplotlib.ticker import MaxNLocator

data = list()
boundary = list()

with open('./data_format.txt', 'r') as f:
    for line in f:
        line = [float(i) for i in line.split(' ')]
        boundary.append(line)

boundary = np.array(boundary)
X_slice_num, Y_slice_num = int(boundary[0][0]), int(boundary[0][0])
X_Min, X_Max = boundary[0][1], boundary[0][2]
Y_Min, Y_Max = X_Min, X_Max
XY_num_diff = int(boundary[1][0] - boundary[0][0])

with open('./output_bias_1.65.txt', 'r') as f:
    for line in f:
        # for E's amplitude
        # line = [float(i) for i in line.split(' ')[1: -1]]
        # for light intensity
        line = [float(i)**2 for i in line.split(' ')[1: -1]]
        data.append(line)

data = np.array(data[1:])

X = np.linspace(X_Min, X_Max, X_slice_num)
Y = X

Z = data.T[int(XY_num_diff/2):int(boundary[1][0] - XY_num_diff/2)]

display.set_matplotlib_formats('svg')
# 设置一张长10，宽6的画布
plt.figure(figsize=(10, 7), dpi=100, frameon=True)
levels = MaxNLocator(nbins=200).tick_values(np.min(data), np.max(data))
cm = plt.cm.get_cmap('jet')
# 填充颜色，f即为filled
plt.contourf(X, Y, Z, levels=levels, cmap=cm)

cbar = plt.colorbar()
cbar.set_label('Intensity',rotation=-90,va='bottom',fontsize=32)
cbar.set_ticks(np.linspace(np.min(data), np.max(data), 5))

# set the font size of colorbar
cbar.ax.tick_params(labelsize=15)
# 画等高线
# plt.contour(X, Y, Z)

plt.show()
