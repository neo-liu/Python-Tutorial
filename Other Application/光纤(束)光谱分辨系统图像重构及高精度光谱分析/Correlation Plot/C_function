import numpy as np
import matplotlib.pyplot as plt
from IPython import display

data = list()
Data = list()
Correlation = list()
dlambda1 = np.arange(0, 1.1, 0.1)
dlambda2 = np.arange(10, 110, 10)
dlambda = np.append(dlambda1, dlambda2, axis=0)

for i in range(0, 21):
    with open('./'+str(i)+'.txt', 'r') as f:
        for line in f:
            line = [float(i)**2 for i in line.split(' ')[1: -1]]
            data.append(line)
        Data.append(np.array(data[1:]))
        data.clear()

Lambda = [1550 + dlambda[i] for i in range(len(dlambda))]

data = Data[0]
# A_P_1 : <I(λ，x)>
A_P_1 = data.sum() / Lambda[0]
# A_P_1 = data.sum() / len(data[0]) / len(data[1])

for num, i in enumerate(Data):
    # P_A : <I(λ，x)I(λ+Δλ，x)>
    # P_A = (data * i).sum() / len(data[0]) / len(data[1])
    # A_P_2 : <I(λ+Δλ，x)>
    # A_P_2 = i.sum() / len(i[0]) / len(i[1])
    P_A = (data * i).sum() / (Lambda[num] + Lambda[0]) / 2
    A_P_2 = i.sum() / Lambda[num]
    Correlation.append(P_A / A_P_1 / A_P_2)

display.set_matplotlib_formats('svg')
# # 设置一张长10，宽6的画布
plt.figure(figsize=(7, 6))
plt.plot(dlambda, Correlation)
plt.scatter(dlambda, Correlation)

for i, j in zip(dlambda, Correlation):
    txt.append((i, j))
for i in range(len(dlambda)):
    plt.annotate(Correlation[i], xy=(dlambda[i], Correlation[i]), xytext=(dlambda[i]*1.02, Correlation[i]*1.02))

plt.grid(), plt.title('Correlation', fontsize=25)
plt.xlabel('wavelength(nm)', fontsize=15), plt.ylabel('Spectral Correlation C(d lambda)', fontsize=15)
plt.show()
